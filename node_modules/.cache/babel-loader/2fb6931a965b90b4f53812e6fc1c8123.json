{"remainingRequest":"/home/trongnhan/Documents/vue3-online-shop/node_modules/babel-loader/lib/index.js!/home/trongnhan/Documents/vue3-online-shop/node_modules/eslint-loader/index.js??ref--13-0!/home/trongnhan/Documents/vue3-online-shop/src/store/modules/users.module.js","dependencies":[{"path":"/home/trongnhan/Documents/vue3-online-shop/src/store/modules/users.module.js","mtime":1624773220846},{"path":"/home/trongnhan/Documents/vue3-online-shop/node_modules/cache-loader/dist/cjs.js","mtime":1624773928728},{"path":"/home/trongnhan/Documents/vue3-online-shop/node_modules/babel-loader/lib/index.js","mtime":1624773928639},{"path":"/home/trongnhan/Documents/vue3-online-shop/node_modules/eslint-loader/index.js","mtime":1624773982091}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Ryb25nbmhhbi9Eb2N1bWVudHMvdnVlMy1vbmxpbmUtc2hvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGFwaSBmcm9tICJAL3NlcnZpY2VzL3VzZXJzLnNlcnZpY2UiOwoKdmFyIHN0YXRlID0gZnVuY3Rpb24gc3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIHVzZXI6IHt9LAogICAgaXNMb2dpblN1Y2Nlc3M6IGZhbHNlLAogICAgbG9naW5NZXNzYWdlOiAiIiwKICAgIGlzUmVnaXN0ZXJTdWNjZXNzOiBmYWxzZSwKICAgIHJlZ2lzdGVyTWVzc2FnZTogIiIKICB9Owp9OwoKdmFyIGdldHRlcnMgPSB7fTsKdmFyIGFjdGlvbnMgPSB7CiAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKF9yZWYsIF9yZWYyKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCBlbWFpbCwgcGFzc3dvcmQsIHVzZXIsIGVycm9yUmVzcG9uc2UsIF9lcnJvclJlc3BvbnNlJGRhdGE7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgZW1haWwgPSBfcmVmMi5lbWFpbCwgcGFzc3dvcmQgPSBfcmVmMi5wYXNzd29yZDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmxvZ2luKHsKICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHVzZXIgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgic2V0VXNlciIsIHVzZXIpOwogICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9naW5TdWNjZXNzIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2dpbk1lc3NhZ2UiLCAiIik7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICBjb21taXQoInNldExvZ2luU3VjY2VzcyIsIGZhbHNlKTsKICAgICAgICAgICAgICBlcnJvclJlc3BvbnNlID0gX2NvbnRleHQudDAucmVzcG9uc2U7CgogICAgICAgICAgICAgIGlmIChlcnJvclJlc3BvbnNlICYmIGVycm9yUmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9naW5NZXNzYWdlIiwgKChfZXJyb3JSZXNwb25zZSRkYXRhID0gZXJyb3JSZXNwb25zZS5kYXRhKSA9PT0gbnVsbCB8fCBfZXJyb3JSZXNwb25zZSRkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZXJyb3JSZXNwb25zZSRkYXRhLm1lc3NhZ2UpIHx8ICJMb2dpbiBmYWlsZWQhIik7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9naW5NZXNzYWdlIiwgIkxvZ2luIGZhaWxlZCEiKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDExXV0pOwogICAgfSkpKCk7CiAgfSwKICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIoX3JlZjMsIHVzZXIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCBlcnJvclJlc3BvbnNlLCBfZXJyb3JSZXNwb25zZSRkYXRhMjsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5yZWdpc3Rlcih1c2VyKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjb21taXQoInNldFJlZ2lzdGVyU3VjY2VzcyIsIHRydWUpOwogICAgICAgICAgICAgIGNvbW1pdCgic2V0UmVnaXN0ZXJNZXNzYWdlIiwgIiIpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICBjb21taXQoInNldFJlZ2lzdGVyU3VjY2VzcyIsIGZhbHNlKTsKICAgICAgICAgICAgICBlcnJvclJlc3BvbnNlID0gX2NvbnRleHQyLnQwLnJlc3BvbnNlOwoKICAgICAgICAgICAgICBpZiAoZXJyb3JSZXNwb25zZSAmJiBlcnJvclJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoInNldFJlZ2lzdGVyTWVzc2FnZSIsICgoX2Vycm9yUmVzcG9uc2UkZGF0YTIgPSBlcnJvclJlc3BvbnNlLmRhdGEpID09PSBudWxsIHx8IF9lcnJvclJlc3BvbnNlJGRhdGEyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZXJyb3JSZXNwb25zZSRkYXRhMi5tZXNzYWdlKSB8fCAiUmVnaXN0ZXIgZmFpbGVkISIpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb21taXQoInNldFJlZ2lzdGVyTWVzc2FnZSIsICJSZWdpc3RlciBmYWlsZWQhIik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDhdXSk7CiAgICB9KSkoKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0VXNlcjogZnVuY3Rpb24gc2V0VXNlcihzdGF0ZSwgdXNlcikgewogICAgc3RhdGUudXNlciA9IHVzZXI7CiAgfSwKICBzZXRMb2dpblN1Y2Nlc3M6IGZ1bmN0aW9uIHNldExvZ2luU3VjY2VzcyhzdGF0ZSwgc3RhdHVzKSB7CiAgICBzdGF0ZS5pc0xvZ2luU3VjY2VzcyA9IHN0YXR1czsKICB9LAogIHNldExvZ2luTWVzc2FnZTogZnVuY3Rpb24gc2V0TG9naW5NZXNzYWdlKHN0YXRlLCBtZXNzYWdlKSB7CiAgICBzdGF0ZS5sb2dpbk1lc3NhZ2UgPSBtZXNzYWdlOwogIH0sCiAgc2V0UmVnaXN0ZXJTdWNjZXNzOiBmdW5jdGlvbiBzZXRSZWdpc3RlclN1Y2Nlc3Moc3RhdGUsIHN0YXR1cykgewogICAgc3RhdGUuaXNSZWdpc3RlclN1Y2Nlc3MgPSBzdGF0dXM7CiAgfSwKICBzZXRSZWdpc3Rlck1lc3NhZ2U6IGZ1bmN0aW9uIHNldFJlZ2lzdGVyTWVzc2FnZShzdGF0ZSwgbWVzc2FnZSkgewogICAgc3RhdGUucmVnaXN0ZXJNZXNzYWdlID0gbWVzc2FnZTsKICB9LAogIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICBzdGF0ZS51c2VyID0ge307CiAgICBzdGF0ZS5pc0xvZ2luU3VjY2VzcyA9IGZhbHNlOwogICAgc3RhdGUuaXNSZWdpc3RlclN1Y2Nlc3MgPSBmYWxzZTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/home/trongnhan/Documents/vue3-online-shop/src/store/modules/users.module.js"],"names":["api","state","user","isLoginSuccess","loginMessage","isRegisterSuccess","registerMessage","getters","actions","login","commit","email","password","errorResponse","response","status","data","message","register","mutations","setUser","setLoginSuccess","setLoginMessage","setRegisterSuccess","setRegisterMessage","logout","namespaced"],"mappings":"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","sourcesContent":["import api from \"@/services/users.service\";\n\nconst state = () => ({\n  user: {},\n  isLoginSuccess: false,\n  loginMessage: \"\",\n  isRegisterSuccess: false,\n  registerMessage: \"\",\n});\n\nconst getters = {};\n\nconst actions = {\n  async login({ commit }, { email, password }) {\n    try {\n      const user = await api.login({ email, password });\n\n      commit(\"setUser\", user);\n      commit(\"setLoginSuccess\", true);\n      commit(\"setLoginMessage\", \"\");\n    } catch (error) {\n      commit(\"setLoginSuccess\", false);\n\n      const errorResponse = error.response;\n      if (errorResponse && errorResponse.status === 400) {\n        commit(\n          \"setLoginMessage\",\n          errorResponse.data?.message || \"Login failed!\"\n        );\n      } else {\n        commit(\"setLoginMessage\", \"Login failed!\");\n      }\n    }\n  },\n\n  async register({ commit }, user) {\n    try {\n      await api.register(user);\n\n      commit(\"setRegisterSuccess\", true);\n      commit(\"setRegisterMessage\", \"\");\n    } catch (error) {\n      commit(\"setRegisterSuccess\", false);\n\n      const errorResponse = error.response;\n      if (errorResponse && errorResponse.status === 400) {\n        commit(\n          \"setRegisterMessage\",\n          errorResponse.data?.message || \"Register failed!\"\n        );\n      } else {\n        commit(\"setRegisterMessage\", \"Register failed!\");\n      }\n    }\n  },\n};\n\nconst mutations = {\n  setUser(state, user) {\n    state.user = user;\n  },\n\n  setLoginSuccess(state, status) {\n    state.isLoginSuccess = status;\n  },\n\n  setLoginMessage(state, message) {\n    state.loginMessage = message;\n  },\n\n  setRegisterSuccess(state, status) {\n    state.isRegisterSuccess = status;\n  },\n\n  setRegisterMessage(state, message) {\n    state.registerMessage = message;\n  },\n\n  logout(state) {\n    state.user = {};\n    state.isLoginSuccess = false;\n    state.isRegisterSuccess = false;\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}